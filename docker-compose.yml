version: '3'
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    ports:
      - "8000:80"
    networks:
      - app-network
    environment:
      DATABASE_URL: postgresql+asyncpg://username:password@db/mydatabase
      REDIS_HOST: redis

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network


  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - app-network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  celery:
    build:
      context: ./backend
    command: celery -A celery_tasks worker --loglevel=info
    volumes:
      - ./backend:/app
    networks:
      - app-network
    depends_on:
      - redis

  flower:
    image: mher/flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - app-network
    depends_on:
      - redis

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
